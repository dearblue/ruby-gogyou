#!/bin/env ruby

path = File.join(File.dirname(__FILE__), "lib", "gogyou", "primitives.rb")

# type name, byte bytesize, alignment bytesize, store method, load method
records = <<EOS
size_t TypeSpec::SIZEOF_SIZE_T TypeSpec::SIZEOF_SIZE_T store_sizet load_sizet
ssize_t TypeSpec::SIZEOF_SIZE_T TypeSpec::SIZEOF_SIZE_T store_sizet load_ssizet
intptr_t TypeSpec::SIZEOF_SIZE_T TypeSpec::SIZEOF_SIZE_T store_sizet load_ssizet
uintptr_t TypeSpec::SIZEOF_SIZE_T TypeSpec::SIZEOF_SIZE_T store_sizet load_sizet
int8_t    1 1 store8    loadi8
uint8_t   1 1 store8    loadu8
int16_t   2 2 store16   loadi16
uint16_t  2 2 store16   loadu16
int32_t   4 4 store32   loadi32
uint32_t  4 4 store32   loadu32
int64_t   8 8 store64   loadi64
uint64_t  8 8 store64   loadu64
int16_be  2 2 store16be loadi16be
uint16_be 2 2 store16be loadu16be
int24_be  3 1 store24be loadi24be
uint24_be 3 1 store24be loadu24be
int32_be  4 4 store32be loadi32be
uint32_be 4 4 store32be loadu32be
int48_be  6 2 store48be loadi48be
uint48_be 6 2 store48be loadu48be
int64_be  8 8 store64be loadi64be
uint64_be 8 8 store64be loadu64be
int16_le  2 2 store16le loadi16le
uint16_le 2 2 store16le loadu16le
int24_le  3 1 store24le loadi24le
uint24_le 3 1 store24le loadu24le
int32_le  4 4 store32le loadi32le
uint32_le 4 4 store32le loadu32le
int48_le  6 2 store48le loadi48le
uint48_le 6 2 store48le loadu48le
int64_le  8 8 store64le loadi64le
uint64_le 8 8 store64le loadu64le
int16_swap  2 2 store16swap loadi16swap
uint16_swap 2 2 store16swap loadu16swap
int32_swap  4 4 store32swap loadi32swap
uint32_swap 4 4 store32swap loadu32swap
int64_swap  8 8 store64swap loadi64swap
uint64_swap 8 8 store64swap loadu64swap
char      1 1 store8   loadi8
uchar     1 1 store8   loadu8
short     TypeSpec::SIZEOF_SHORT TypeSpec::SIZEOF_SHORT store_short  load_short
ushort    TypeSpec::SIZEOF_SHORT TypeSpec::SIZEOF_SHORT store_short  load_ushort
int       TypeSpec::SIZEOF_INT TypeSpec::SIZEOF_INT store_int load_int
uint      TypeSpec::SIZEOF_INT TypeSpec::SIZEOF_INT store_int load_uint
long      TypeSpec::SIZEOF_LONG TypeSpec::SIZEOF_LONG store_long load_long
ulong     TypeSpec::SIZEOF_LONG TypeSpec::SIZEOF_LONG store_long load_ulong
longlong  TypeSpec::SIZEOF_LONGLONG TypeSpec::SIZEOF_LONGLONG store_longlong load_longlong
ulonglong TypeSpec::SIZEOF_LONGLONG TypeSpec::SIZEOF_LONGLONG store_longlong load_ulonglong
float     TypeSpec::SIZEOF_FLOAT TypeSpec::SIZEOF_FLOAT store_float  load_float
double    TypeSpec::SIZEOF_DOUBLE TypeSpec::SIZEOF_DOUBLE store_double  load_double
float_be  4 4 storef32be loadf32be
double_be 8 8 storef64be  loadf64be
float_le  4 4 storef32le  loadf32le
double_le 8 8 storef64le  loadf64le
float_swap  4 4 storef32swap  loadf32swap
double_swap 8 8 storef64swap  loadf64swap
float16_t 2 2 storef16 loadf16
float16_swap 2 2 storef16swap loadf16swap
float16_be 2 2 storef16be loadf16be
float16_le 2 2 storef16le loadf16le
float32_t 4 4 storef32 loadf32
float32_swap 4 4 storef32swap loadf32swap
float32_be 4 4 storef32be loadf32be
float32_le 4 4 storef32le loadf32le
float64_t 8 8 storef64 loadf64
float64_swap 8 8 storef64swap loadf64swap
float64_be 8 8 storef64be loadf64be
float64_le 8 8 storef64le loadf64le
fixed16q8_t 2 2 store16q8 loadi16q8
fixed16q8_swap 2 2 store16q8swap loadi16q8swap
fixed16q8_be 2 2 store16q8be loadi16q8be
fixed16q8_le 2 2 store16q8le loadi16q8le
fixed32q6_t 4 4 store32q6 loadi32q6
fixed32q6_swap 4 4 store32q6swap loadi32q6swap
fixed32q6_be 4 4 store32q6be loadi32q6be
fixed32q6_le 4 4 store32q6le loadi32q6le
fixed32q8_t 4 4 store32q8 loadi32q8
fixed32q8_swap 4 4 store32q8swap loadi32q8swap
fixed32q8_be 4 4 store32q8be loadi32q8be
fixed32q8_le 4 4 store32q8le loadi32q8le
fixed32q12_t 4 4 store32q12 loadi32q12
fixed32q12_swap 4 4 store32q12swap loadi32q12swap
fixed32q12_be 4 4 store32q12be loadi32q12be
fixed32q12_le 4 4 store32q12le loadi32q12le
fixed32q16_t 4 4 store32q16 loadi32q16
fixed32q16_swap 4 4 store32q16swap loadi32q16swap
fixed32q16_be 4 4 store32q16be loadi32q16be
fixed32q16_le 4 4 store32q16le loadi32q16le
fixed32q24_t 4 4 store32q24 loadi32q24
fixed32q24_swap 4 4 store32q24swap loadi32q24swap
fixed32q24_be 4 4 store32q24be loadi32q24be
fixed32q24_le 4 4 store32q24le loadi32q24le
EOS

File.open(path, "wb") do |f|
  f.puts <<-EOS
#--
# this code is generated by #{File.basename __FILE__}
#++

require_relative "typespec"

module Gogyou
  class Primitive < ::Struct.new(:name, :bytesize, :bytealign)
    BasicStruct = superclass

    undef :name=, :bytesize=, :bytealign=

    def initialize(name, bytesize, bytealign, aset, aref)
      super(name.intern, bytesize.to_i, bytealign.to_i)
      define_singleton_method(:aset, aset)
      define_singleton_method(:aref, aref)
    end

    def extensible?
      false
    end

    def to_s
      "\\\#<\#{self.class}:\#{name} bytesize=\#{bytesize.inspect}, bytealign=\#{bytealign.inspect}>"
    end

    alias inspect to_s

    def pretty_print(q)
      #name, bytesize, bytealign
      q.group(1, "\\\#<\#{self.class}:\#{name}") do
        q.breakable " "
        q.text "bytesize="
        q.pp bytesize
        q.text ","
        q.breakable " "
        q.text "bytealign="
        q.pp bytealign
      end
      q.text ">"
    end
  end

  module Primitives
  EOS

  records = records.split(/\n/)
  records.map! { |r| r.split(/\s+/) }

  records.each do |typename, bytesize, bytealign, aset, aref|
    name = typename.upcase
    f.puts <<-EOS
    #{name.ljust(9)} = Primitive[#{typename.intern.inspect}, #{bytesize}, #{bytealign},
                          ->(buf, offset, num) { buf.#{aset}(offset, num) },
                          ->(buf, offset) { buf.#{aref}(offset) }].freeze
    EOS
  end

  f.puts <<-EOS
  end
end
  EOS
end
